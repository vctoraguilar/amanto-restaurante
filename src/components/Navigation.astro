---
import { LanguageSelector } from './LanguageSelector.tsx';
import { HoverBorderGradient } from './ui/HoverBorderGradient.tsx';
import { GlowingEffect } from './ui/GlowingEffect.tsx';
const currentPath = Astro.url.pathname;
---

<nav class="fixed top-0 w-full z-50 transition-all duration-300" id="main-nav">
  <div class="container mx-auto px-4 py-4">
    <div class="flex items-center justify-between">
      <!-- Logo -->
      <div class="flex items-center space-x-2">
        <img src="/images/logo.svg" alt="Amanto" class="w-20 h-20" />
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center gap-8">
        <a href="/" class={`nav-link text-white hover:text-white transition-colors ${currentPath === '/' ? 'active' : ''}`}>
          <span data-translate="nav.home">Inicio</span>
        </a>
        <a href="/nosotros" class={`nav-link text-white hover:text-white transition-colors ${currentPath === '/nosotros' ? 'active' : ''}`}>
          <span data-translate="nav.about">Nosotros</span>
        </a>
        <a href="/carta" class={`nav-link text-white hover:text-white transition-colors ${currentPath === '/carta' ? 'active' : ''}`}>
          <span data-translate="nav.menu">Carta</span>
        </a>
        <div class="flex justify-center">
          <LanguageSelector client:load />
        </div>
        <div class="ml-4">
          <GlowingEffect
          className="rounded-full"
          blur={8}
          spread={25}
          borderWidth={1}
          variant="default"
          client:load
        >
          <a href="mailto:reservas@amantorestaurante.com">
            <HoverBorderGradient
              containerClassName="rounded-full"
              as="button"
              className="bg-black text-white px-12 py-2 text-sm font-medium"
            >
              <span data-translate="nav.reserve">Reservar</span>
            </HoverBorderGradient>
          </a>
        </GlowingEffect>
        </div>
      </div>

      <!-- Mobile Menu Button -->
      <button class="md:hidden text-white" id="mobile-menu-button">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div class="md:hidden mt-4 hidden" id="mobile-menu">
      <div class="flex flex-col space-y-4 py-4">
        <a href="/" class={`nav-link text-white hover:text-white transition-colors ${currentPath === '/' ? 'active' : ''}`}>
          <span data-translate="nav.home">Inicio</span>
        </a>
        <a href="/nosotros" class={`nav-link text-white hover:text-white transition-colors ${currentPath === '/nosotros' ? 'active' : ''}`}>
          <span data-translate="nav.about">Nosotros</span>
        </a>
        <a href="/carta" class={`nav-link text-white hover:text-white transition-colors ${currentPath === '/carta' ? 'active' : ''}`}>
          <span data-translate="nav.menu">Carta</span>
        </a>
        <div class="flex justify-center mt-8">
          <LanguageSelector client:load />
        </div>
        <GlowingEffect
          className="rounded-full w-full"
          blur={8}
          spread={25}
          borderWidth={1}
          variant="default"
          client:load
        >
          <a href="mailto:reservas@amantorestaurante.com" class="w-full flex justify-center">
            <HoverBorderGradient
              containerClassName="rounded-full w-full"
              as="button"
              className="bg-black text-white px-6 py-2 text-sm font-medium w-full"
            >
              <span data-translate="nav.reserve">Reservar</span>
            </HoverBorderGradient>
          </a>
        </GlowingEffect>
      </div>
    </div>
  </div>
</nav>

<script>
  import { translations, getCurrentLanguage } from '../lib/translations';

  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const mainNav = document.getElementById('main-nav');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }

    // Scroll effect for navbar
    let lastScroll = 0;
    const handleScroll = () => {
      const currentScroll = window.pageYOffset;
      
      if (mainNav) {
        if (currentScroll > 50) {
          mainNav.classList.add('scrolled');
        } else {
          mainNav.classList.remove('scrolled');
        }
      }
      
      lastScroll = currentScroll;
    };

    window.addEventListener('scroll', handleScroll, { passive: true });

    // Traducir elementos
    const updateTranslations = () => {
      const lang = getCurrentLanguage();
      const t = translations[lang];
      
      document.querySelectorAll('[data-translate]').forEach((element) => {
        const key = element.getAttribute('data-translate');
        if (key) {
          const keys = key.split('.');
          let value: any = t;
          for (const k of keys) {
            value = value[k];
          }
          if (value && typeof value === 'string') {
            element.textContent = value;
          }
        }
      });
    };

    updateTranslations();
  });
</script>

<style>
  #main-nav {
    background-color: transparent;
  }

  #main-nav.scrolled {
    background-color: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }

  .nav-link {
    position: relative;
    padding: 0.5rem 0;
    transition: all 0.3s ease;
  }

  .nav-link::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: 0;
    left: 0;
    background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
    transition: width 0.3s ease;
  }

  .nav-link:hover::after,
  .nav-link.active::after {
    width: 100%;
  }
</style>
